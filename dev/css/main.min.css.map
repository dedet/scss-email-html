{"version":3,"sources":["..\\scss\\base\\_reset.scss","..\\scss\\main.scss","..\\scss\\abstracts\\_typhography.scss","..\\scss\\abstracts\\_grid.scss"],"names":[],"mappings":"AAWC,KACC,QAAA,CACA,SAAA,CACA,UAAA,CACA,6BAAA,CACA,yBAAA,CAGD,SAAA,wBAAA,CAGC,2BAAA,oBAAA,CACA,MACC,WAAA,CAIF,IACC,YAAA,CACA,oBAAA,CACA,8BAAA,CAGD,EACC,QAAA,CAGD,aACC,aAAA,CAGD,eACC,UAAA,CACA,8FACC,gBAAA,CAIF,WACC,eC3CuB,CCuBrB,YAEI,uBAAA,CAUI,IAEI,cAAA,CACA,gBAAA,CAHJ,IAEI,cAAA,CACA,kBAAA,CAHJ,IAEI,cAAA,CACA,kBAAA,CATJ,SACI,wCAAA,CACA,cAAA,CACA,gBAAA,CC8CR,WAQI,YAAA,CARJ,eAQI,WAAA,CARJ,WAQI,WAAA,CARJ,gBAQI,WAAA,CARJ,oBAQI,WAAA,CARJ,uBAQI,aAAA,CARJ,iBAQI,WAAA","file":"main.min.css","sourcesContent":["$_email-width: 804;\r\n\r\n/// Configure email width\r\n/// @param {number} $email-width\r\n/// set email width\r\n@mixin configure($email-width){\r\n\t$_email-width: $email-width !global;\r\n}\r\n\r\n@mixin style {\r\n\t/**RESET**/\r\n\tbody{\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\twidth: 100%;\r\n\t\t-webkit-text-size-adjust: 100%;\r\n\t\t-ms-text-size-adjust: 100%;\r\n\t}\r\n\r\n\ttable, td{border-collapse: collapse;}\r\n\r\n\ta{\r\n\t\t&, &:link, &:hover, &:visited{text-decoration: none;}\r\n\t\timg {\r\n\t\t\tborder:none;\r\n\t\t}\r\n\t}\r\n\r\n\timg{\r\n\t\toutline: none;\r\n\t\ttext-decoration: none;\r\n\t\t-ms-interpolation-mode: bicubic;\r\n\t}\r\n\r\n\tp{\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\timg, .img_fix{\r\n\t\tdisplay:block;\r\n\t}\r\n\r\n\t.ExternalClass{ // Force Hotmail to display emails at full width\r\n\t\twidth:100%;\r\n\t\t& p, & span, & font, & td, & div{ // Force Hotmail to display normal line spacing.\r\n\t\t\tline-height: 150%;\r\n\t\t}\r\n\t}\r\n\r\n\t.gmail-fix{\r\n\t\tmin-width: $_email-width;\r\n\t}\r\n}","@use 'sass:list';\r\n@use 'base/reset';\r\n@use 'abstracts/colors' as col;\r\n@use 'abstracts/typhography' as type;\r\n@use 'abstracts/grid';\r\n\r\n// configure reset\r\n@include reset.configure(804px);\r\n@include reset.style;\r\n\r\n// configure color\r\n@include col.configure(\r\n  (pertama, kedua, ketiga),\r\n  (\r\n    merah: merah,\r\n    hijau: hujai,\r\n    biru: biru\r\n  )\r\n);\r\n\r\n// configure typhography\r\n@include type.configure(\r\n  (\r\n    'h1' 50 1.25,\r\n    'h2' 45 1.25,\r\n    'content' 16 1.5\r\n  ),\r\n  (\r\n    'heading': (Roboto, sans),\r\n    'content': (\"Times New Roman\", sans-serif)\r\n  ),\r\n  false\r\n);\r\n@include type.style;\r\n\r\n// configure grids\r\n@include grid.configure(\r\n  60,\r\n  30,\r\n  (full, half-int, half, one-third, two-third-int, three-fourth-int, one-fourth)\r\n);\r\n @include grid.create-grid;\r\n @debug grid.$grid-width;\r\n","$_my-font:(\r\n  \"h1\" 44 1.25,\r\n  \"h2\" 42 1.25,\r\n  \"h3\" 38 1.25,\r\n  \"content\" 14 1.5);\r\n\r\n$_font-family:(\r\n  \"heading\": (Helvetica, Arial, sans-serif),\r\n  \"content\": (Geordia, \"Times New Roman\", serif)\r\n);\r\n\r\n$_same-family: true;\r\n\r\n\r\n/// Configure typhography\r\n/// \r\n/// @param {list} $the-font\r\n/// list of font class, size, line height\r\n/// @param {map} $font-family\r\n/// map of font family\r\n/// @param {boolean} $same-family:true.\r\n/// set all type to use the same font family\r\n@mixin configure($the-font, $font-family, $same-family:true){\r\n    $_myfont : $the-font !global;\r\n    $_font-family: $font-family !global;\r\n    $_same-family: $same-family !global;\r\n}\r\n\r\n@mixin style {\r\n    /* TYPHOGRAPHY */\r\n    %same-font {\r\n        // group class together\r\n        font-family: map-get($_font-family, heading);\r\n    }\r\n    @each $class, $size, $line-height in $_my-font {\r\n        @if ($_same-family == false and $class == content){\r\n            .#{$class}{\r\n                font-family:map-get($_font-family, \"content\");\r\n                font-size: $size + px;\r\n                line-height: ($line-height * $size) + px;\r\n            }\r\n        } @else {\r\n            .#{$class}{\r\n                @extend %same-font; // group class together\r\n                font-size: $size + px;\r\n                line-height: ($line-height * $size) + px;\r\n            }\r\n        }\r\n    }\r\n}","@use \"sass:map\";\r\n$use-percent: false;  // Pakai pixel atau percent untuk ukuran column\r\n$grid-gap: 24;        // Grid gap/gutter: jarak antar column\r\n$grid-column: 29;     // Grid column: lebar per column\r\n$grids: null;         // grids map\r\n\r\n// Grid with\r\n// lebar column x 12 (karena pakai sistem 12 grid)\r\n// ditambah\r\n// lebar gap/gutter grid x 11 (gap/gutter hanya sampai 11 untuk sistem grid 12)\r\n$grid-width: calc(($grid-column * 12) + ($grid-gap * 11));\r\n\r\n/// Calculate the width of each grid type\r\n/// \r\n/// @param {number} $column\r\n/// set grid width\r\n/// @param {number} $gap\r\n/// set grid gap/gutter\r\n/// @param {string} $grid-type\r\n/// grid type to calculate\r\n/// @return grid type width\r\n@function _calculate-grid-size($column, $gap, $grid-type)\r\n{\r\n  $grid-size: 0;\r\n  $grid-width: calc(($column * 12) + ($gap * 11)) !global;\r\n  \r\n  @if ($grid-type == full){\r\n    $grid-size: calc(($column * 12) + ($gap * 11));\r\n  } @else if ($grid-type == half){\r\n    $grid-size: calc(($grid-width - $gap) / 2);\r\n  } @else if ($grid-type == half-int){\r\n    $grid-size: calc($grid-width / 2);\r\n  } @else if ($grid-type == one-third){\r\n    $grid-size: calc(($grid-width - ($gap * 2)) / 3);\r\n  } @else if ($grid-type == one-third-int){\r\n    $grid-size: calc($grid-width / 3);\r\n  } @else if ($grid-type == two-third){\r\n    $grid-size: calc(((($grid-width - ($gap * 2)) / 3) * 2) + $gap);\r\n  } @else if ($grid-type == two-third-int){\r\n    $grid-size: calc(($grid-width / 3) * 2);\r\n  } @else if ($grid-type == one-fourth){\r\n    $grid-size: calc(($grid-width - ($gap * 3)) / 4);\r\n  } @else if ($grid-type == one-fourth-int){\r\n    $grid-size: calc($grid-width / 4);\r\n  } @else if ($grid-type == three-fourth){\r\n    $grid-size: calc(((($grid-width - ($gap * 3)) / 4) * 3) + ($gap * 2));\r\n  } @else if ($grid-type == three-fourth-int){\r\n    $grid-size: calc(($grid-width / 4) * 3);\r\n  } @else {\r\n    @error \"#{$grid-type} is not a valid grid type (full, half, half-int, one-third, one-third-int, two-third, two-third-int, one-fourth, one-fourth-int, three-fourth, three-fourth-int)\";\r\n  }\r\n  \r\n  @return $grid-size;\r\n}\r\n\r\n/// Configure grid\r\n/// @param {number} $column-width\r\n/// width of columns in grid\r\n/// @param {number} $gap\r\n/// gap between column (gutter)\r\n/// @param {string} $grid-type\r\n/// type of grid\r\n/// @param {boolean} $use-precent\r\n/// set to use percent for grid width, except for full grid size stil use pixel\r\n@mixin configure($column-width, $gap, $grid-type, $use-percent:false){\r\n  $temp-map:();\r\n  $grids:() !global;\r\n\r\n  @each $type in $grid-type{\r\n    $temp-map: ($type: _calculate-grid-size($column-width, $gap, $type));\r\n    $grids: map.merge($grids, $temp-map) !global;\r\n  }\r\n\r\n  $use-percent: $use-percent !global;\r\n}\r\n\r\n//\r\n// Create grid classes\r\n//\r\n@mixin create-grid{\r\n    /**GRID**/\r\n    $map : $grids; // nilai lebar grid\r\n\r\n    .grid{\r\n      @each $key, $value in $map{ // ambil value array $grid-list\r\n        &-#{$key}{\r\n          @if ($use-percent){ // nilai kolom jadi percent\r\n            @if($key == full){ // khusus untuk grid full dibikin pixel jika $use-percent: true\r\n              width: $value + px;\r\n            } @else {\r\n              width: calc(($value / $grid-width) * 100%);\r\n            }\r\n          } @else { // nilai kolom jadi pixel\r\n            width: $value + px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n}"]}